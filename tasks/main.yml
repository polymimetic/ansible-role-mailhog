---
# tasks file for mailhog

- name: Check MailHog version
  command: "mailhog --version"
  register: mailhog_version
  ignore_errors: true
  failed_when: false
  changed_when: false

- name: Cleanup MailHog existing installation
  file:
    path: "{{ mailhog_install_dir }}/mailhog"
    state: absent
  when: mailhog_version | failed
  ignore_errors: true
  failed_when: false
  changed_when: false

# Install and configure MailHog
- name: Ensure mailhog install directory exists
  file:
    path: "{{ mailhog_install_dir }}"
    owner: root
    group: root
    state: directory
    mode: 0755

- name: Download MailHog and mhsendmail binaries
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - url: "{{ mailhog_binary_url }}"
      dest: "{{ mailhog_install_dir }}/mailhog"
    - url: "{{ mhsendmail_binary_url }}"
      dest: "{{ mailhog_install_dir }}/mhsendmail"

- name: Copy mailhog systemd unit file into place (for systemd systems)
  template:
    src: mailhog.unit.j2
    dest: /etc/systemd/system/mailhog.service
    owner: root
    group: root
    mode: 0755
  when: "ansible_service_mgr == 'systemd'"

- name: Ensure mailhog is enabled and will start on boot
  service:
    name: mailhog
    state: started
    enabled: yes


###

# - name: Check MailHog version
#   command: "mailhog --version"
#   register: mailhog_version
#   ignore_errors: true
#   failed_when: false
#   changed_when: false

# - name: Cleanup MailHog existing installation
#   file: path="/usr/local/bin/mailhog" state=absent
#   when: mailhog_version | failed
#   ignore_errors: true
#   failed_when: false
#   changed_when: false

- name: Download MailHog
  get_url: url="{{ mailhog.url }}" dest=/usr/local/bin/mailhog force=no
  when: mailhog_version | failed

- name: Make MailHog executable
  file: path=/usr/local/bin/mailhog mode=0755
  when: mailhog_version | failed

- name: Copy MailHog init script
  template: src=systemd/mailhog dest=/etc/systemd/system/mailhog.service owner=root group=root mode=0644

- name: "Ensure MailHog is {{ mailhog.start | ternary('started','stopped') }}"
  service: name=mailhog state={{ mailhog.start | ternary('restarted','stopped') }} enabled={{ mailhog.service_enabled }}
